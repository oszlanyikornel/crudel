import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import { useEffect } from "react";
import { CustomMutation, useCrudel } from "@crudel/client";
//import { useUser } from "../hooks/useUser";
import axios from "axios";

interface SomeNew {
	name: string;
}
interface Some extends SomeNew {
	id: string;
}

export default function Home() {
	const customFetcher = async (url: string) => {
		const res = await axios.get(url);
		return res.data;
	};

	const { data, error, loading, create, update, remove } = useCrudel<
		Some[],
		SomeNew,
		Error
	>("/api/projects");

	const mutateData: CustomMutation<Some[], SomeNew> = (oldData, newData) => {
		const d = {
			name: Array.isArray(newData) ? newData[0].name : newData?.name,
			id: 2,
		};
		return [...(oldData || []), d];
	};

	const mutateDelete: CustomMutation<Some[], SomeNew> = (oldData, newData) => {
		return [];
	};

	const mutateUpdate: CustomMutation<Some[], SomeNew> = (oldData, newData) => {
		const newD = oldData?.map((da) => ({ ...da, name: "new name" }));
		return newD;
	};

	const addSome = async () => {
		const { data: addData, error: addError } = await create(
			{ name: "kornel" },
			undefined,
			undefined,
			mutateData,
			false
		);

		if (error) return addError;
		return addData;
	};

	const deleteSome = async () => {
		const { data: addData, error: addError } = await remove(
			"2",
			undefined,
			undefined,
			mutateDelete,
			false
		);

		if (error) return addError;
		return addData;
	};

	const updateSome = async () => {
		const { data: addData, error: addError } = await update(
			"2",
			{ name: "kornel" },
			undefined,
			undefined,
			mutateUpdate,
			false
		);

		if (error) return addError;
		return addData;
	};

	return (
		<div className={styles.container}>
			<Head>
				<title>Create Next App</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<button onClick={async () => console.log(await addSome())}>
				add data
			</button>
			<button onClick={async () => console.log(await updateSome())}>
				update data
			</button>
			<button onClick={async () => console.log(await deleteSome())}>
				delete data
			</button>
			{error ? (
				JSON.stringify(error)
			) : loading ? (
				<p>Loading...</p>
			) : data ? (
				JSON.stringify(data)
			) : (
				<p>no data</p>
			)}
		</div>
	);
}
